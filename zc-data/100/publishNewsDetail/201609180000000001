[{"id":"201609180000000001","sortNo":1,"contentFormatId":"1","contentTxt":"Today, at a special meetup at Google HQ, we announced the final release version of Angular 2, the full-platform successor to Angular 1.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201609180000000002","sortNo":2,"contentFormatId":"1","contentTxt":"What does \"final\" mean? Stability that's been validated across a wide range of use cases, and a framework that's been optimized for developer productivity, small payload size, and performance. With ahead-of-time compilation and built-in lazy-loading, we’ve made sure that you can deploy the fastest, smallest applications across the browser, desktop, and mobile environments. This release also represents huge improvements to developer productivity with the Angular CLI and styleguide.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201609180000000003","sortNo":3,"contentFormatId":"1","contentTxt":"Angular 1 first solved the problem of how to develop for an emerging web. Six years later, the challenges faced by today’s application developers, and the sophistication of the devices that applications must support, have both changed immensely. With this release, and its more capable versions of the Router, Forms, and other core APIs, today you can build amazing apps for any platform. If you prefer your own approach, Angular is also modular and flexible, so you can use your favorite third-party library or write your own.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201609180000000004","sortNo":4,"contentFormatId":"1","contentTxt":"From the beginning, we built Angular in collaboration with the open source development community. We are grateful to the large number of contributors who dedicated time to submitting pull requests, issues, and repro cases, who discussed and debated design decisions, and validated (and pushed back on) our RCs. We wish we could have brought every one of you in person to our meetup so you could celebrate this milestone with us tonight!","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201609180000000005","sortNo":5,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201609180000000006","sortNo":6,"contentFormatId":"1","contentTxt":"<strong>What’s next?</strong>","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201609180000000007","sortNo":7,"contentFormatId":"1","contentTxt":"Angular is now ready for the world, and we’re excited for you to join the thousands of developers already building with Angular 2.  But what’s coming next for Angular?","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201609180000000008","sortNo":8,"contentFormatId":"1","contentTxt":"A few of the things you can expect in the near future from the Angular team:","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201609180000000009","sortNo":9,"contentFormatId":"1","contentTxt":"1. Bug fixes and non-breaking features for APIs marked as stable","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201609180000000010","sortNo":10,"contentFormatId":"1","contentTxt":"2. More guides and live examples specific to your use cases","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201609180000000011","sortNo":11,"contentFormatId":"1","contentTxt":"3. More work on animations","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201609180000000012","sortNo":12,"contentFormatId":"1","contentTxt":"4. Angular Material 2","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201609180000000013","sortNo":13,"contentFormatId":"1","contentTxt":"5. Moving WebWorkers out of experimental","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201609180000000014","sortNo":14,"contentFormatId":"1","contentTxt":"6. More features and more languages for Angular Universal","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201609180000000015","sortNo":15,"contentFormatId":"1","contentTxt":"7. Even more speed and payload size improvements","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201609180000000016","sortNo":16,"contentFormatId":"1","contentTxt":"<strong>Semantic Versioning</strong>","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201609180000000017","sortNo":17,"contentFormatId":"1","contentTxt":"We heard loud and clear that our RC labeling was confusing. To make it easy to manage dependencies on stable Angular releases, starting today with Angular 2.0.0, we will move to semantic versioning.  Angular versioning will then follow the MAJOR.MINOR.PATCH scheme as described by semver:","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201609180000000018","sortNo":18,"contentFormatId":"1","contentTxt":"1. the MAJOR version gets incremented when incompatible API changes are made to stable APIs.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201609180000000019","sortNo":19,"contentFormatId":"1","contentTxt":"2. the MINOR version gets incremented when backwards-compatible functionality are added","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201609180000000020","sortNo":20,"contentFormatId":"1","contentTxt":"3. the PATCH version gets incremented when backwards-compatible bug are fixed.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201609180000000021","sortNo":21,"contentFormatId":"1","contentTxt":"Moving Angular to semantic versioning ensures rapid access to the newest features for our component and tooling ecosystem, while preserving a consistent and reliable development environment for production applications that depend on stability between major releases, but still benefit from bug fixes and new APIs.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201609180000000022","sortNo":22,"contentFormatId":"1","contentTxt":"With gratitude and appreciation, and anticipation to see what you'll build next, welcome to the next stage of Angular.","contentBinary":"","contentPoster":"","contentUrl":null}]