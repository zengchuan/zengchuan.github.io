[{"id":"201706300000000001","sortNo":1,"contentFormatId":"1","contentTxt":"Hope you are all well. This post is a response to many of our friends asking me how to do simple videochats via WebRTC in Angular 2. Well, here we will be using a library called peerjs to accomplish the same.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000002","sortNo":2,"contentFormatId":"1","contentTxt":"You could either host your own peerjs server either locally or on hosting services such as heroku. Alternatively you could just register in their site peerjs.com","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000003","sortNo":3,"contentFormatId":"1","contentTxt":"Scaffold out an application using the below command.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000004","sortNo":4,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000005","sortNo":5,"contentFormatId":"1","contentTxt":"Now open up your application and get to index.html. Add the below line of code in the <head> section.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000006","sortNo":6,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000007","sortNo":7,"contentFormatId":"1","contentTxt":"Open up your app.component.html and add the below lines of code.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000008","sortNo":8,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000009","sortNo":9,"contentFormatId":"1","contentTxt":"Now open up app.component.ts and add the below code.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000010","sortNo":10,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000011","sortNo":11,"contentFormatId":"1","contentTxt":"Let’s break this down.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000012","sortNo":12,"contentFormatId":"1","contentTxt":"We are creating an instance of Peer. (A peer id is created) We are then using that peer object to open a connection to a peer id. Once the connection is open we send a message.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000013","sortNo":13,"contentFormatId":"1","contentTxt":"We have also written code in ngOnInit() for listening to messages. When it receives a message it will print it out on the console.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000014","sortNo":14,"contentFormatId":"1","contentTxt":"Since Peer is not predefined interface or component it will obviously throw a type error from the typescript compiler.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000015","sortNo":15,"contentFormatId":"1","contentTxt":"So simply open up typings.d.ts in the app directory and add the below line to it.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000016","sortNo":16,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000017","sortNo":17,"contentFormatId":"1","contentTxt":"Run this app using ng serve and see if it all goes fine.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000018","sortNo":18,"contentFormatId":"1","contentTxt":"It would wait for 3 seconds before displaying the peer id on the screen.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000019","sortNo":19,"contentFormatId":"1","contentTxt":"Open up app.component.html again and add the below lines of code.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000020","sortNo":20,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000021","sortNo":21,"contentFormatId":"1","contentTxt":"Now open up app.component.ts and modify it as shown below.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000022","sortNo":22,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000023","sortNo":23,"contentFormatId":"1","contentTxt":"Let’s break this down.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000024","sortNo":24,"contentFormatId":"1","contentTxt":"Now if you notice","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000025","sortNo":25,"contentFormatId":"1","contentTxt":"1. We have added a navigator instance (Typecasted it out). Using this I am getting an instance of the video and audio devices in the user’s browser.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000026","sortNo":26,"contentFormatId":"1","contentTxt":"2. Once the input streams are received then it is converted into a blob using URL.createObjectURL and then this is given as src to the video element.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000027","sortNo":27,"contentFormatId":"1","contentTxt":"3. The video element is referenced here using ViewChild.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000028","sortNo":28,"contentFormatId":"1","contentTxt":"4. We have also written code for receiving an incoming call. The call.answer() function will answer the call and get the incoming stream.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000029","sortNo":29,"contentFormatId":"1","contentTxt":"5. We once again follow the same method to get an instance of the user’s cam and audio using getUserMedia and then receives the stream which is then passed on the src attribute of the video tag.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000030","sortNo":30,"contentFormatId":"1","contentTxt":"Now simply run the app. When the browser asks for permission click allow. If everything goes fine you should be able to see yourself. (Use multiple tabs/windows to simulate a multi-user environment).","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000031","sortNo":31,"contentFormatId":"1","contentTxt":"Hope this helped you guys. Kindly share it with someone and help them too.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000032","sortNo":32,"contentFormatId":"1","contentTxt":"<strong>source code</strong>","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000033","sortNo":33,"contentFormatId":"1","contentTxt":"<a href=\"https://github.com/rajayogan/angular2-videochat\">https://github.com/rajayogan/angular2-videochat</a>","contentBinary":"","contentPoster":"","contentUrl":null}]