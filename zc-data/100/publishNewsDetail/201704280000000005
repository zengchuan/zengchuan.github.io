[{"id":"201704280000000151","sortNo":1,"contentFormatId":"1","contentTxt":"In this tutorial I'll show you how you can implement animations between routes in Angular 2 / Angular 4 and TypeScript.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201704280000000152","sortNo":2,"contentFormatId":"1","contentTxt":"Difference Between Angular 2/4 Animations and AngularJS Animations","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201704280000000153","sortNo":3,"contentFormatId":"1","contentTxt":"Animations in Angular 2/4 work completely differently to Angular 1, in Angular 1 there are css class hooks that you can use to animate elements into view and out of view, whereas in Angular 2/4 animations are implemented inside your components using a set of functions (trigger, state, animate, transition, style) from the new '@angular/animations' package.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201704280000000154","sortNo":4,"contentFormatId":"1","contentTxt":"Animation styles are still defined using CSS but they're written in TypeScript using JSON objects (TSON?) instead of CSS/LESS files, there's also a new Angular Animation DSL (Domain Specific Language) that has been created to define different states and transitions between states. I won't go too much into the details of all the new bits and pieces of the animation system since you can find all that information on the angular docs site, instead I'll focus on an example and how to get animations working between routes.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201704280000000155","sortNo":5,"contentFormatId":"1","contentTxt":"Don't feel bad if the new angular animation system has had you banging your head against the wall in frustration, it's taken me an embarrassingly long time to get my head around and I'm still coming to grips with it!","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201704280000000156","sortNo":6,"contentFormatId":"1","contentTxt":"<strong>Import BrowserAnimationsModule into app.module.ts</strong>","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201704280000000157","sortNo":7,"contentFormatId":"1","contentTxt":"With the release of Angular 4, animations were split out from the angular core into their own module, so to use animations you have to import the BrowserAnimationsModule at the top of your app.module.ts file:","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201704280000000158","sortNo":8,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201704280000000159","sortNo":9,"contentFormatId":"1","contentTxt":"And add the BrowserAnimationsModule to the list of imports in your @NgModule metadata:","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201704280000000160","sortNo":10,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201704280000000161","sortNo":11,"contentFormatId":"1","contentTxt":"The first import makes BrowserAnimationsModule available to code inside the app.module.ts file, and the second import makes all the public functions from BrowserAnimationsModule available to other components in AppModule.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201704280000000162","sortNo":12,"contentFormatId":"1","contentTxt":"<strong>Define Your Angular 2/4 Animations</strong>","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201704280000000163","sortNo":13,"contentFormatId":"1","contentTxt":"Animations can be defined directly inside your components but I prefer to separate them into their own files, this allows you to re-use the animations anywhere in your application and makes component code much cleaner as it maintains a good separation of concerns.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201704280000000164","sortNo":14,"contentFormatId":"1","contentTxt":"In the example I've put animations in the app/_animations folder, I like to prefix non-feature folders with an underscore '_' to group them together at the top and separate them from feature folders. Feature folders contain code for views / routes in your application such as home and products, non-feature folders contain shared code such as services, animations, directives, css etc, basically everything else.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201704280000000165","sortNo":15,"contentFormatId":"1","contentTxt":"<strong>Angular 2/4 Fade In Animation</strong>","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201704280000000166","sortNo":16,"contentFormatId":"1","contentTxt":"The fade in animation that's used by the home component and product list component in the example.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201704280000000167","sortNo":17,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201704280000000168","sortNo":18,"contentFormatId":"1","contentTxt":"<strong>Angular 2/4 Slide In/Out Animation</strong>","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201704280000000169","sortNo":19,"contentFormatId":"1","contentTxt":"The slide in/out animation that's used by the product add/edit component in the example.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201704280000000170","sortNo":20,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201704280000000171","sortNo":21,"contentFormatId":"1","contentTxt":"<strong>Attach the Angular Animations to Your Routed Components</strong>","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201704280000000172","sortNo":22,"contentFormatId":"1","contentTxt":"With the animations cleanly separated into their own files it's easy to attach them to your angular routes, all you need to do is import the animation you want to use and add it to your @Component metadata.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201704280000000173","sortNo":23,"contentFormatId":"1","contentTxt":"Angular 2/4 Home Component with Fade In Animation","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201704280000000174","sortNo":24,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201704280000000175","sortNo":25,"contentFormatId":"1","contentTxt":"<strong>Angular 2/4 Product List Component with Fade In Animation</strong>","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201704280000000176","sortNo":26,"contentFormatId":"1","contentTxt":"The product list component from the example with the fade in animation attached.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201704280000000177","sortNo":27,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201704280000000178","sortNo":28,"contentFormatId":"1","contentTxt":"<strong>Angular 2/4 Product Add/Edit Component with Slide In/Out Animation</strong>","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201704280000000179","sortNo":29,"contentFormatId":"1","contentTxt":"The product add/edit component from the example with the slide in/out animation attached.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201704280000000180","sortNo":30,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201704280000000181","sortNo":31,"contentFormatId":"1","contentTxt":"<strong>source code</strong>","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201704280000000182","sortNo":32,"contentFormatId":"1","contentTxt":"<a href=\"https://github.com/cornflourblue/angular2-animation-tutorial-example\">https://github.com/cornflourblue/angular2-animation-tutorial-example</a>","contentBinary":"","contentPoster":"","contentUrl":null}]