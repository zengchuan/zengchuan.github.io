[{"id":"201603080000000001","sortNo":1,"contentFormatId":"1","contentTxt":"In this short post I will show you how to unit test EventEmitters in Angular 2.0.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201603080000000002","sortNo":2,"contentFormatId":"1","contentTxt":"The classic use case for EventEmitter is to trigger a custom event from a component and propagate the event up to the consumer of the component – most likely another component. It's essentially a common pattern for inter component communication.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201603080000000003","sortNo":3,"contentFormatId":"1","contentTxt":"I have created a simple example to help illustrate the scenario.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201603080000000004","sortNo":4,"contentFormatId":"2","contentTxt":null,"contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201603080000000005","sortNo":5,"contentFormatId":"1","contentTxt":"When the user clicks the button in the child component, a custom greeting event is dispatched. In the parent component we are trapping this event and printing the greeting to the console.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201603080000000006","sortNo":6,"contentFormatId":"1","contentTxt":"The functionality is simple enough, but how can we unit test that the greeting event actually fired? It turns out that we can take advantage of the fact that EventEmitter is an RxJs Subject in disguise. This means we can simply subscribe to EventEmitter events – directly from the test.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201603080000000007","sortNo":7,"contentFormatId":"1","contentTxt":"In the test below you will see how to wire up assertions on the expected events.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201603080000000008","sortNo":8,"contentFormatId":"2","contentTxt":null,"contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201603080000000009","sortNo":9,"contentFormatId":"1","contentTxt":"I am using the done() parameter here, but it is strictly not necessary with the current implementation. However, I like to add it as a safeguard to guarantee that the test won't exit before the event subscription completes.","contentBinary":"","contentPoster":"","contentUrl":null}]