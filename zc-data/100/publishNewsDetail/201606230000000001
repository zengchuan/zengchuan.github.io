[{"id":"201606230000000001","sortNo":1,"contentFormatId":"1","contentTxt":"So far, there are two things deprecated before reaching the final Angular 2 release — one is router and the other is form.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000002","sortNo":2,"contentFormatId":"1","contentTxt":"There are a few ways building form in Angular 2. We’ll talk about the old way and the new and simplified way to build a template driven form in RC3.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000003","sortNo":3,"contentFormatId":"1","contentTxt":"Scenario: Simple add user form","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000004","sortNo":4,"contentFormatId":"1","contentTxt":"We will build a really simple form to capture user information based on this interface.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000005","sortNo":5,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000006","sortNo":6,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000007","sortNo":7,"contentFormatId":"1","contentTxt":"Additional requirements:","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000008","sortNo":8,"contentFormatId":"1","contentTxt":"1. User name is mandatory field with minimum 5 characters.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000009","sortNo":9,"contentFormatId":"1","contentTxt":"2. Show user name error message only when: (1) user name is invalid and it’s dirty (the field is touched/edited) (2) user name is invalid and the form is submitted","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000010","sortNo":10,"contentFormatId":"1","contentTxt":"<strong>The old way</strong>","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000011","sortNo":11,"contentFormatId":"1","contentTxt":"Here is how our component will look like:","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000012","sortNo":12,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000013","sortNo":13,"contentFormatId":"1","contentTxt":"Here is how our template form look like.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000014","sortNo":14,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000015","sortNo":15,"contentFormatId":"1","contentTxt":"Notes:","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000016","sortNo":16,"contentFormatId":"1","contentTxt":"1. #f is the reference variable to the form directive. Refer to Angular official documentation for more details.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000017","sortNo":17,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000018","sortNo":18,"contentFormatId":"1","contentTxt":"2. save function is triggered when form submitted.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000019","sortNo":19,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000020","sortNo":20,"contentFormatId":"1","contentTxt":"Now, take a look at the user name and address 1 input field:","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000021","sortNo":21,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000022","sortNo":22,"contentFormatId":"1","contentTxt":"Notes:","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000023","sortNo":23,"contentFormatId":"1","contentTxt":"1. ngModel enable two way binding.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000024","sortNo":24,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000025","sortNo":25,"contentFormatId":"1","contentTxt":"2. Use ngControl to track the change state and validity of form control.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000026","sortNo":26,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000027","sortNo":27,"contentFormatId":"1","contentTxt":"3. #name is the reference variable to the input directive.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000028","sortNo":28,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000029","sortNo":29,"contentFormatId":"1","contentTxt":"4. ngControlGroup enables us to semantically group our form controls.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000030","sortNo":30,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000031","sortNo":31,"contentFormatId":"1","contentTxt":"<strong>The new way(RC3)</strong>","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000032","sortNo":32,"contentFormatId":"1","contentTxt":"Nothing wrong with the old way, but there are a few improvements in the new way:","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000033","sortNo":33,"contentFormatId":"1","contentTxt":"1. Remove ngControl: since ngControl and ngModel behavior are quite similar (ngControl has extra validity checking features), it’s possible to combine ngControl into ngModel, additional name attribute required.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000034","sortNo":34,"contentFormatId":"1","contentTxt":"2. Changed NgControlGroup to NgModelGroup: since no more ngControl, so there will be no more NgControlGroup but NgModelGroup.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000035","sortNo":35,"contentFormatId":"1","contentTxt":"3. Added submitted flag to NgForm: with this improvment, we don’t need to define submitted property in our component.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000036","sortNo":36,"contentFormatId":"1","contentTxt":"Here is how our new form look like, no changes, same as old way.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000037","sortNo":37,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000038","sortNo":38,"contentFormatId":"1","contentTxt":"Here is how our user name and address 1 input field look like (no more ngControl and ngControlGroup, added name attribute and ngModelGroup):","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000039","sortNo":39,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000040","sortNo":40,"contentFormatId":"1","contentTxt":"Our component can be then simplified to:","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000041","sortNo":41,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000042","sortNo":42,"contentFormatId":"1","contentTxt":"<strong>How to use old / new way?</strong>","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000043","sortNo":43,"contentFormatId":"1","contentTxt":"To continue to use old way, no changes needed.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000044","sortNo":44,"contentFormatId":"1","contentTxt":"To use the new way, you need to:","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000045","sortNo":45,"contentFormatId":"1","contentTxt":"1. Install @angular/forms package and include in system-config.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000046","sortNo":46,"contentFormatId":"1","contentTxt":"2. Enable it during bootstrap:","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000047","sortNo":47,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000048","sortNo":48,"contentFormatId":"1","contentTxt":"3. Import any needed symbols from @angular/forms","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000049","sortNo":49,"contentFormatId":"1","contentTxt":"<strong>Notes for upcoming RC3 release</strong>","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000050","sortNo":50,"contentFormatId":"1","contentTxt":"According to the form changes proposal, in the coming RC3 release, by default there will be no forms.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000051","sortNo":51,"contentFormatId":"1","contentTxt":"To use new forms:","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000052","sortNo":52,"contentFormatId":"1","contentTxt":"1. Use “provideForms()” function","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000053","sortNo":53,"contentFormatId":"1","contentTxt":"2. Import any needed symbols from @angular/forms","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000054","sortNo":54,"contentFormatId":"1","contentTxt":"To use deprecated forms:","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000055","sortNo":55,"contentFormatId":"1","contentTxt":"1. Use “provideDeprecatedForms()” function","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000056","sortNo":56,"contentFormatId":"1","contentTxt":"2. Import any needed symbols from @angular/common","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000057","sortNo":57,"contentFormatId":"1","contentTxt":"However, that’s for RC3.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000058","sortNo":58,"contentFormatId":"1","contentTxt":"<strong>Summary</strong>","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201606230000000059","sortNo":59,"contentFormatId":"1","contentTxt":"If you are coming from Angular 1, the new way might look more familiar to you. Although the amount of code are quite similar for both way, but I prefer the new way than the old one because it looks more natural to me.","contentBinary":"","contentPoster":"","contentUrl":null}]