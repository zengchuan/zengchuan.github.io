[{"id":"201706300000000034","sortNo":1,"contentFormatId":"1","contentTxt":"Hope you are all well. In this post let’s see how to do a simple video streaming functionality in your Angular 2 app using the simple-peer library. I already made a similar post using peerjs library. But that library doesn’t seem to be maintained nowadays and the last commit was 2 years back. So let’s use simple-peer today.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000035","sortNo":2,"contentFormatId":"1","contentTxt":"Let’s scaffold out our angular 2 app using the angular-cli.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000036","sortNo":3,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000037","sortNo":4,"contentFormatId":"1","contentTxt":"Just to make it simple we’ll make use of a cdn to provide simple-peer file in our app.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000038","sortNo":5,"contentFormatId":"1","contentTxt":"Open up index.html and add the script as shown below.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000039","sortNo":6,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000040","sortNo":7,"contentFormatId":"1","contentTxt":"Open up app.component.html and add the below code.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000041","sortNo":8,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000042","sortNo":9,"contentFormatId":"1","contentTxt":"Now open up app.component.ts and add the below code.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000043","sortNo":10,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000044","sortNo":11,"contentFormatId":"1","contentTxt":"Okay. Let’s break this down.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000045","sortNo":12,"contentFormatId":"1","contentTxt":"1. The peer.signal is to simply signal the peer to which a connection is to be established, or rather an ‘offer’ is to be made.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000046","sortNo":13,"contentFormatId":"1","contentTxt":"2. When such a signal is made the peer data(JSON format) is simply logged on to the console.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000047","sortNo":14,"contentFormatId":"1","contentTxt":"3. The message function is simply to send a message when a connection is established. When data is received it is simply logged onto the console again.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000048","sortNo":15,"contentFormatId":"1","contentTxt":"Now you might encounter an error while creating the peer since we haven’t declared SimplePeer anywhere.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000049","sortNo":16,"contentFormatId":"1","contentTxt":"To fix this create a file called typings.d.ts in your src directory and include this line to that.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000050","sortNo":17,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000051","sortNo":18,"contentFormatId":"1","contentTxt":"Now open up main.ts file and add the below code. (at the top of the file)","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000052","sortNo":19,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000053","sortNo":20,"contentFormatId":"1","contentTxt":"Now run the app using ng serve.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000054","sortNo":21,"contentFormatId":"1","contentTxt":"Open up your browser and navigate to","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000055","sortNo":22,"contentFormatId":"1","contentTxt":"http://localhost:4200/#init","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000056","sortNo":23,"contentFormatId":"1","contentTxt":"This will be the initiator peer and if you open up the console you would see the JSON data of that peer. Copy this.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000057","sortNo":24,"contentFormatId":"1","contentTxt":"Open a new tab and navigate to","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000058","sortNo":25,"contentFormatId":"1","contentTxt":"http://localhost:4200","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000059","sortNo":26,"contentFormatId":"1","contentTxt":"Paste it in the input field and click on connect button. Open up the console and copy the JSON data here too.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000060","sortNo":27,"contentFormatId":"1","contentTxt":"Go back to the first (initiator) tab and paste this in the input field there and click on connect. Now a peer to peer connection is established. To verify the connection. Just click on Send Message button in both the tabs and you would see the message in the console.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000061","sortNo":28,"contentFormatId":"1","contentTxt":"<strong>Adding Video</strong>","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000062","sortNo":29,"contentFormatId":"1","contentTxt":"Now that we know how to establish a connection and send data over the channel let’s see how to stream video over the network.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000063","sortNo":30,"contentFormatId":"1","contentTxt":"Open up app.component.html and add a video element to it as shown below.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000064","sortNo":31,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000065","sortNo":32,"contentFormatId":"1","contentTxt":"Then open up app.component.ts file and add the below code to it.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000066","sortNo":33,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000067","sortNo":34,"contentFormatId":"1","contentTxt":"Let’s break this down.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000068","sortNo":35,"contentFormatId":"1","contentTxt":"1. We use ViewChild to reference/access our video element from the view in our component here.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000069","sortNo":36,"contentFormatId":"1","contentTxt":"2. We are simply getting the video stream from the device using navigator.getUserMedia and passing it on in our connection.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000070","sortNo":37,"contentFormatId":"1","contentTxt":"3. We are using a setTimeout function so that our peer doesn’t go undefined since this whole operation would happen before the view elements come into picture.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000071","sortNo":38,"contentFormatId":"1","contentTxt":"Now run the app using ng serve and perform the same steps you did last time.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000072","sortNo":39,"contentFormatId":"1","contentTxt":"If everything goes fine you would see a video of yourself in both the tabs when the connection is established.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000073","sortNo":40,"contentFormatId":"1","contentTxt":"<strong>source code</strong>","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201706300000000074","sortNo":41,"contentFormatId":"1","contentTxt":"<a href=\"https://github.com/rajayogan/angular2-peer2peer\">https://github.com/rajayogan/angular2-peer2peer</a>","contentBinary":"","contentPoster":"","contentUrl":null}]