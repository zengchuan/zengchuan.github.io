[{"id":"201604150000000001","sortNo":1,"contentFormatId":"1","contentTxt":"Angular 2 is getting near the final release, and the whole community is really excited about the possibilities that it will bring. But the latest announcement a couple of days ago about the likely final release in May included one important quote about the future of Angular:","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201604150000000002","sortNo":2,"contentFormatId":"1","contentTxt":"With Angular 2, we’re really attacking it from a ‘platform of capabilities’ standpoint... Our plan is to have versions that will work with many server-side technologies, from Java to Python.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201604150000000003","sortNo":3,"contentFormatId":"1","contentTxt":"Further than that, it was confirmed in one of the keynotes of Fluent that the same applies to PHP. Also at Build 2016, the future availability of Angular in the PHP, Java and .NET platforms was again confirmed (see this presentation).","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201604150000000004","sortNo":4,"contentFormatId":"1","contentTxt":"Let's go through what this quote might mean in terms of using Angular for full stack development in multiple ecosystems, by going over the following topics:","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201604150000000005","sortNo":5,"contentFormatId":"1","contentTxt":"Angular in non-Javascript languages","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201604150000000006","sortNo":6,"contentFormatId":"1","contentTxt":"This mention of versions of Angular 2 in languages like Java or Python is not something completely new, as Angular 1 itself had a Java version for GWT (angulargwt), which would compile down to Javascript.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201604150000000007","sortNo":7,"contentFormatId":"1","contentTxt":"Angular 2 itself is available in Dart, and its internally built in Typescript. But the possibility of making it available in other languages and platforms other than Dart is something else completely.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201604150000000008","sortNo":8,"contentFormatId":"1","contentTxt":"The possibility of using Angular on the server is something that is currently being worked on, via the Angular Universal project.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201604150000000009","sortNo":9,"contentFormatId":"1","contentTxt":"Full Stack Angular in Javascript - Angular Universal","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201604150000000010","sortNo":10,"contentFormatId":"1","contentTxt":"Angular Universal is a core Angular project for enabling the use of Angular 2 on a Node.js server for the purposes of server side rendering.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201604150000000011","sortNo":11,"contentFormatId":"1","contentTxt":"See this latest talk for more details on Angular Universal, and especially this episode of the Read The Source podcast, where we can see Angular Universal in action (including the router part).","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201604150000000012","sortNo":12,"contentFormatId":"1","contentTxt":"Notice that on the first part of the AngularConnect talk we can see an example of how to use the Angular 2 dependency injection on the server. Its worth mentioning that this could be done also without Angular Universal, as a way to structure a server app into decoupled modules.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201604150000000013","sortNo":13,"contentFormatId":"1","contentTxt":"This is an example of the benefits of using the same technology across the whole stack: the same dependency injection container could be used on the client and on the server.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201604150000000014","sortNo":14,"contentFormatId":"1","contentTxt":"Overview of how Angular Universal works","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201604150000000015","sortNo":15,"contentFormatId":"1","contentTxt":"What Angular Universal provides is a view rendering engine for express, which is in everything similar to any other express rendering engine, such as the Jade or Mustache template engines.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201604150000000016","sortNo":16,"contentFormatId":"1","contentTxt":"To see this in action, this is a simplified version of what an express server rendering Angular 2 components looks like:","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201604150000000017","sortNo":17,"contentFormatId":"2","contentTxt":null,"contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201604150000000018","sortNo":18,"contentFormatId":"1","contentTxt":"Whats going here is the following:","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201604150000000019","sortNo":19,"contentFormatId":"1","contentTxt":"1. we configure express to use as view rendering engine the Angular Universal engine","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201604150000000020","sortNo":20,"contentFormatId":"1","contentTxt":"2. the engine is configured to render html files","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201604150000000021","sortNo":21,"contentFormatId":"1","contentTxt":"3. the root route / is configured to return as response the rendering of index.html with root component App","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201604150000000022","sortNo":22,"contentFormatId":"1","contentTxt":"There is another important element going on, the Angular router is also active on the server side.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201604150000000023","sortNo":23,"contentFormatId":"1","contentTxt":"How does routing work in Angular Universal?","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201604150000000024","sortNo":24,"contentFormatId":"1","contentTxt":"The root component App contains router-specific annotations:","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201604150000000025","sortNo":25,"contentFormatId":"2","contentTxt":null,"contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201604150000000026","sortNo":26,"contentFormatId":"1","contentTxt":"The meaning of these annotations is clear on the client side: navigation will update the HTML5 Browser history instead of triggering a full page refresh, creating the enhanced experience that single page apps are all about.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201604150000000027","sortNo":27,"contentFormatId":"1","contentTxt":"But on the server side, what does the router do? On the server, the router is configured differently than on the client:","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201604150000000028","sortNo":28,"contentFormatId":"2","contentTxt":null,"contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201604150000000029","sortNo":29,"contentFormatId":"1","contentTxt":"Notice that a server side location provider is passed to the application. The way that the Angular 2 router works on the server is that if the user gets sent a direct link to some route inside the application, for example http://yourdomain.com/someroute, the server side version of the router will then take the route path /someroute and use it to determine which component should be rendered.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201604150000000030","sortNo":30,"contentFormatId":"1","contentTxt":"The result is that the client gets served a fully rendered html page, but then the client side router takes over the application. The user will still have the single page experience with no further server side re-rendering being triggered.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201604150000000031","sortNo":31,"contentFormatId":"1","contentTxt":"Advantages of using Angular also on the server side","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201604150000000032","sortNo":32,"contentFormatId":"1","contentTxt":"Server side rendering has become popular for example in the React community, as it allows product organizations to build single page applications that do not suffer from search engine indexability issues, and give the user a much enhanced user experience.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201604150000000033","sortNo":33,"contentFormatId":"1","contentTxt":"This aproach brings the best of both worlds:","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201604150000000034","sortNo":34,"contentFormatId":"1","contentTxt":"1. the user gets served an html page that its immediately rendered with very little startup time","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201604150000000035","sortNo":35,"contentFormatId":"1","contentTxt":"2. because most of the work was done on the server side, only a minimal amount of Javascript needs to be transfered to the client to take over the page as a SPA, this further speeds up things","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201604150000000036","sortNo":36,"contentFormatId":"1","contentTxt":"3. this is ideal for mobile devices, where we want to avoid serving a large amount of Javascript over a constrained network","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201604150000000037","sortNo":37,"contentFormatId":"1","contentTxt":"4. the page is easily indexable by any search engine","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201604150000000038","sortNo":38,"contentFormatId":"1","contentTxt":"Lets now see all this works together in practice, and then how all this links back to the announcement of Java and Python versions.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201604150000000039","sortNo":39,"contentFormatId":"1","contentTxt":"The Angular Universal Starter","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201604150000000040","sortNo":40,"contentFormatId":"1","contentTxt":"The Angular Universal project provides a separate repository to quickly start a new project: the universal-starter. Let's install it and start it:","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201604150000000041","sortNo":41,"contentFormatId":"2","contentTxt":null,"contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201604150000000042","sortNo":42,"contentFormatId":"1","contentTxt":"Now lets load a page, and inspect the html that came over the wire:","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201604150000000043","sortNo":43,"contentFormatId":"2","contentTxt":null,"contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201604150000000044","sortNo":44,"contentFormatId":"1","contentTxt":"We can see that the server parsed the component tree and sent back the html, with only a relatively small script at the bottom of the page containing the registrations of the application browser event handlers.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201604150000000045","sortNo":45,"contentFormatId":"1","contentTxt":"We can also see that the HTML that come over there was produced in a node server, but that could have been produced by any other server technology: Java, Python, etc.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201604150000000046","sortNo":46,"contentFormatId":"1","contentTxt":"It would suffice that for that particular language to have a version of Angular Universal that works exactly the same way as the Node version. This would allow Angular to be used instead of traditional server-side templating engines.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201604150000000047","sortNo":47,"contentFormatId":"1","contentTxt":"Conclusions","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201604150000000048","sortNo":48,"contentFormatId":"1","contentTxt":"We can see that using Angular in both the client and the server brings several important advantages besides uniformity and the fact that there are less technologies to learn.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201604150000000049","sortNo":49,"contentFormatId":"1","contentTxt":"Its not only about solving SEO issues for single page apps, using Angular on the server allows an enhanced user experience and to have the same app work in a wider range of devices.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201604150000000050","sortNo":50,"contentFormatId":"1","contentTxt":"Although nothing is concrete yet and we don't have much details, its probable that Angular will be ported to other languages together with its server-side side counterpart Angular Universal.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201604150000000051","sortNo":51,"contentFormatId":"1","contentTxt":"Application code written using those ports will then be compiled to Javascript using technologies like the GWT compiler or PythonJs.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201604150000000052","sortNo":52,"contentFormatId":"1","contentTxt":"It would be possible to port only the framework, but the benefits of a full stack approach and server side rendering are really important.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201604150000000053","sortNo":53,"contentFormatId":"1","contentTxt":"By the looks of it, its very well possible that Angular could in time become the first multi-language full stack development platform.","contentBinary":"","contentPoster":"","contentUrl":null}]