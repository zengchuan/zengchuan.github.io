[{"id":"201607050000000001","sortNo":1,"contentFormatId":"1","contentTxt":"Creating Angular 2 projects has never been faster than with the Angular CLI.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000002","sortNo":2,"contentFormatId":"1","contentTxt":"If you've ever gone through the Angular 2 Quickstart over the past year, you'll know that a big part of getting started with Angular 2 is the setup. It included things like:","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000003","sortNo":3,"contentFormatId":"1","contentTxt":"1. Creating our app files","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000004","sortNo":4,"contentFormatId":"1","contentTxt":"2. Configuring TypeScript and Typings","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000005","sortNo":5,"contentFormatId":"1","contentTxt":"3. Adding script tags for (1) Angular 2 (2) Rx.js (3) System.js","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000006","sortNo":6,"contentFormatId":"1","contentTxt":"4. Configuring System.js","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000007","sortNo":7,"contentFormatId":"1","contentTxt":"5. Creating our Angular 2 component","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000008","sortNo":8,"contentFormatId":"1","contentTxt":"6. Bootstrapping our Angular 2 application","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000009","sortNo":9,"contentFormatId":"1","contentTxt":"Talk about a lot! Thankfully, at ng-conf 2016, the Angular team announced a tool that will make creating and scaffolding Angular 2 applications incredibly easy.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000010","sortNo":10,"contentFormatId":"1","contentTxt":"The Angular CLI cli.angular.io","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000011","sortNo":11,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000012","sortNo":12,"contentFormatId":"1","contentTxt":"The Angular CLI effectively takes all those configuration and setup steps shown above and condenses it down into one quick line:","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000013","sortNo":13,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000014","sortNo":14,"contentFormatId":"1","contentTxt":"There are many things that the CLI can do so let's get it installed and walk through some features.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000015","sortNo":15,"contentFormatId":"1","contentTxt":"<strong>Installing the Angular CLI</strong>","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000016","sortNo":16,"contentFormatId":"1","contentTxt":"To install the CLI, we'll use Node and npm.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000017","sortNo":17,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000018","sortNo":18,"contentFormatId":"1","contentTxt":"That's it! Now we can start using the CLI to build out our applications.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000019","sortNo":19,"contentFormatId":"1","contentTxt":"<strong>Starting a New Application</strong>","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000020","sortNo":20,"contentFormatId":"1","contentTxt":"To start a new application, just run the command we saw earlier:","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000021","sortNo":21,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000022","sortNo":22,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000023","sortNo":23,"contentFormatId":"1","contentTxt":"So what exactly does this do for us? Let's take a look at the newly generated folders and files:","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000024","sortNo":24,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000025","sortNo":25,"contentFormatId":"1","contentTxt":"It's important to take note of this directory structure and where the files are located because the application that the Angular CLI generates follows the recommended app structure and style guide.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000026","sortNo":26,"contentFormatId":"1","contentTxt":"The majority of our application is under src/app. This is where we will be working and everything that gets compiled and is available to our final application will be built to the public folder.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000027","sortNo":27,"contentFormatId":"1","contentTxt":"Learn from this and incorporate these things into your own development. The Angular CLI will not only create the files and folders, it will also install any npm dependencies required.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000028","sortNo":28,"contentFormatId":"1","contentTxt":"Here is the default package.json that gets created:","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000029","sortNo":29,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000030","sortNo":30,"contentFormatId":"1","contentTxt":"All those dependencies are added and included in our src/index.html file. All of the setup that was in the Angular quickstart are now taken care of for us.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000031","sortNo":31,"contentFormatId":"1","contentTxt":"Check out the index.html file and you'll see the scripts loaded and System.js started:","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000032","sortNo":32,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000033","sortNo":33,"contentFormatId":"1","contentTxt":"<strong>NG NEW OPTIONS</strong>","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000034","sortNo":34,"contentFormatId":"1","contentTxt":"1. --dry-run (alias d): Only output the files created and operations performed. It doesn't actually create the project.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000035","sortNo":35,"contentFormatId":"1","contentTxt":"2. --verbose (alias v): Show more information","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000036","sortNo":36,"contentFormatId":"1","contentTxt":"3. --skip-npm: Don't run any npm commands like installing dependencies","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000037","sortNo":37,"contentFormatId":"1","contentTxt":"4. --skip-git: Don't create a new git repo for this project","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000038","sortNo":38,"contentFormatId":"1","contentTxt":"5. --directory: Specify the directory you want to create this project in","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000039","sortNo":39,"contentFormatId":"1","contentTxt":"<strong>Initialize a New Application</strong>","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000040","sortNo":40,"contentFormatId":"1","contentTxt":"Let's say you already have a folder that you've started working in. The ng init command is here so that you can use the current folder you're already working in.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000041","sortNo":41,"contentFormatId":"1","contentTxt":"In the folder you are working in, run:","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000042","sortNo":42,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000043","sortNo":43,"contentFormatId":"1","contentTxt":"Let's talk about the options that we can use with ng init.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000044","sortNo":44,"contentFormatId":"1","contentTxt":"<strong>NG INIT OPTIONS</strong>","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000045","sortNo":45,"contentFormatId":"1","contentTxt":"1. --dry-run (alias d): Only output the files created and operations performed. It doesn't actually create the project.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000046","sortNo":46,"contentFormatId":"1","contentTxt":"2. --verbose (alias v): Show more information","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000047","sortNo":47,"contentFormatId":"1","contentTxt":"3. --skip-npm: Don't run any npm commands like installing dependencies","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000048","sortNo":48,"contentFormatId":"1","contentTxt":"4. --name: Name the new project you are creating","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000049","sortNo":49,"contentFormatId":"1","contentTxt":"<strong>Serve Our Application</strong>","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000050","sortNo":50,"contentFormatId":"1","contentTxt":"Another really cool thing that our CLI allows us to do is to serve our application in the browser. Previously, we would have to create a server using lite-server or create our own Node (or other) server.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000051","sortNo":51,"contentFormatId":"1","contentTxt":"The Angular CLI let's us do this with one simple command:","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000052","sortNo":52,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000053","sortNo":53,"contentFormatId":"1","contentTxt":"Just like that, the Angular CLI will build a server for us with Node and open up our browser.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000054","sortNo":54,"contentFormatId":"1","contentTxt":"<strong>ANGULAR CLI SERVE FEATURES</strong>","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000055","sortNo":55,"contentFormatId":"1","contentTxt":"What features are given to us with our new server?","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000056","sortNo":56,"contentFormatId":"1","contentTxt":"1. Built with BrowserSync: Reload on saves","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000057","sortNo":57,"contentFormatId":"1","contentTxt":"2. Automatically routed for us","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000058","sortNo":58,"contentFormatId":"1","contentTxt":"3. Found in the browser at http://localhost:4200","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000059","sortNo":59,"contentFormatId":"1","contentTxt":"4. Simplicity and ease-of-mind","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000060","sortNo":60,"contentFormatId":"1","contentTxt":"<strong>Generate Parts of Your Application</strong>","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000061","sortNo":61,"contentFormatId":"1","contentTxt":"This is where things get interesting. So far we've just created and instantiated a new project. The ng generate command can do so much for us:","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000062","sortNo":62,"contentFormatId":"1","contentTxt":"1. Create a new component","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000063","sortNo":63,"contentFormatId":"1","contentTxt":"2. Create a new directive","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000064","sortNo":64,"contentFormatId":"1","contentTxt":"3. Create a new route","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000065","sortNo":65,"contentFormatId":"1","contentTxt":"4. Create a new pipe","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000066","sortNo":66,"contentFormatId":"1","contentTxt":"5. Create a new service","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000067","sortNo":67,"contentFormatId":"1","contentTxt":"That's a ton of functionality and helps speed up development. First let's talk about the options that we can use for all of the above.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000068","sortNo":68,"contentFormatId":"1","contentTxt":"<strong>NG GENERATE OPTIONS</strong>","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000069","sortNo":69,"contentFormatId":"1","contentTxt":"1. --flat: Don't create the code in it's own directory. Just add all files to the current directory.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000070","sortNo":70,"contentFormatId":"1","contentTxt":"2. --route=<route>: Specify the parent route. Only used for generating components and routes.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000071","sortNo":71,"contentFormatId":"1","contentTxt":"3. --skip-router-generation: Don't create the route config. Only used for generating routes.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000072","sortNo":72,"contentFormatId":"1","contentTxt":"4. --default: The generated route should be a default route.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000073","sortNo":73,"contentFormatId":"1","contentTxt":"5. --lazy: Specify if route is lazy. default true","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000074","sortNo":74,"contentFormatId":"1","contentTxt":"Now we can run through each and see exactly what gets created and how the Angular CLI makes life easier.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000075","sortNo":75,"contentFormatId":"1","contentTxt":"<strong>Generating a New Component</strong>","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000076","sortNo":76,"contentFormatId":"1","contentTxt":"Components are the foundation of Angular development. Let's generate a new component:","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000077","sortNo":77,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000078","sortNo":78,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000079","sortNo":79,"contentFormatId":"1","contentTxt":"Note: It's important to name your component simply. If a component is created with the name hello, these are the corresponding naming schemes:","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000080","sortNo":80,"contentFormatId":"1","contentTxt":"1. Folder: hello","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000081","sortNo":81,"contentFormatId":"1","contentTxt":"2. Files: `hello.component.[css,html,spec.ts,ts]","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000082","sortNo":82,"contentFormatId":"1","contentTxt":"3. Class: HelloComponent","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000083","sortNo":83,"contentFormatId":"1","contentTxt":"If you use ng generate component HelloComponent, then your component class will be an undesirable HelloComponentComponent.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000084","sortNo":84,"contentFormatId":"1","contentTxt":"Here are the files that get created:","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000085","sortNo":85,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000086","sortNo":86,"contentFormatId":"1","contentTxt":"Our new component is relegated to its own folder within the src/app folder.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000087","sortNo":87,"contentFormatId":"1","contentTxt":"<strong>Generating a New Route</strong>","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000088","sortNo":88,"contentFormatId":"1","contentTxt":"Routes give us a top level view of our application. We can generate them with:","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000089","sortNo":89,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000090","sortNo":90,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000091","sortNo":91,"contentFormatId":"1","contentTxt":"Now we have our new files in a weird new folder under src/app. Our new folder is +about. What's up with that?","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000092","sortNo":92,"contentFormatId":"1","contentTxt":"The + dictates that a folder will be lazy loaded (read more in the style guide. A typical lazy loaded folder contains a routing component, its child components, and their related assets and modules.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000093","sortNo":93,"contentFormatId":"1","contentTxt":"Routing is where the lazy loading takes place, and the route is generated for us via the CLI. Generating a route with the CLI generates a new component and its routing. Let's take a look at the src/app/+about folder:","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000094","sortNo":94,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000095","sortNo":95,"contentFormatId":"1","contentTxt":"That looks awfully similar to when we ran ng generate component hello. That's because it's a component, just like our HelloComponent.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000096","sortNo":96,"contentFormatId":"1","contentTxt":"Where does the routing come into play? We have to go to our top level component (the ScotchyScotchComponent in src/app/scotchy-scotch.component.ts).","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000097","sortNo":97,"contentFormatId":"1","contentTxt":"You can see that the ROUTER_DIRECTIVES AND THE ROUTER_PROVIDERS were imported into our application, injected into our top-level component, and routed using the @Routes() decorator.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000098","sortNo":98,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000099","sortNo":99,"contentFormatId":"1","contentTxt":"We don't have to worry about routing anything, or loading component files when a user visits that route. It's all loaded for us!","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000100","sortNo":100,"contentFormatId":"1","contentTxt":"<strong>More Commands</strong>","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000101","sortNo":101,"contentFormatId":"1","contentTxt":"As the CLI get's more hashed out and more information, we'll be filling out this section with more commands and what they do. Some of these commands were a little buggy when we first tested out the CLI since it's in v1.0.0-beta.1 at the time of this writing.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000102","sortNo":102,"contentFormatId":"1","contentTxt":"Here's the list of commands that we can also run:","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000103","sortNo":103,"contentFormatId":"1","contentTxt":"1. ng build","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000104","sortNo":104,"contentFormatId":"1","contentTxt":"2. ng test: Run unit tests with karma","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000105","sortNo":105,"contentFormatId":"1","contentTxt":"3. ng e2e: Run end-to-end tests with protractor","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000106","sortNo":106,"contentFormatId":"1","contentTxt":"4. ng get: Gets values for project","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000107","sortNo":107,"contentFormatId":"1","contentTxt":"5. ng set: Sets values for project","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000108","sortNo":108,"contentFormatId":"1","contentTxt":"6. ng github-pages:deploy: Build the app for production, setup GitHub repo, and publish","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000109","sortNo":109,"contentFormatId":"1","contentTxt":"7. ng lint: Run codelyzer to analyze code","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000110","sortNo":110,"contentFormatId":"1","contentTxt":"8. ng format","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000111","sortNo":111,"contentFormatId":"1","contentTxt":"9. ng doc","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000112","sortNo":112,"contentFormatId":"1","contentTxt":"10. ng version: Get the version of the CLI","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000113","sortNo":113,"contentFormatId":"1","contentTxt":"<strong>Conclusion</strong>","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000114","sortNo":114,"contentFormatId":"1","contentTxt":"The Angular CLI is an amazing tool and one that comes at a time when more and more people are getting into Angular 2 development. After all the announcments at ng-conf 2016, now is the time to dive in.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201607050000000115","sortNo":115,"contentFormatId":"1","contentTxt":"The CLI makes diving in that much more accessible since setup, which took up the majority of the time for first-time developers is now handled for us.","contentBinary":"","contentPoster":"","contentUrl":null}]