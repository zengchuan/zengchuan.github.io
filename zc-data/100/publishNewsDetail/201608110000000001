[{"id":"201608110000000001","sortNo":1,"contentFormatId":"1","contentTxt":"One really cool thing about Angular 2.0 is that the framework is decoupled from the DOM via a higher level API. In the following post I will show how to take advantage of this by running an Angular application in a web worker.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201608110000000002","sortNo":2,"contentFormatId":"1","contentTxt":"Configuring an Angular application to run as a web worker requires a little bit more setup code than a regular browser application. In this article I will go through a simple example that you can build on to make more complex applications later.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201608110000000003","sortNo":3,"contentFormatId":"1","contentTxt":"I will start by creating a simple root component. In my sample I have created a component for calculating n-factorial. The idea is that a value n will be passed to the component from the outside. Then, the component will calculate n-factorial based on n and return the result.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201608110000000004","sortNo":4,"contentFormatId":"1","contentTxt":"If we look at the component code in isolation it's not really that different from regular components.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201608110000000005","sortNo":5,"contentFormatId":"1","contentTxt":"The main difference is the bootstrapWorkerApp call that allows us to bootstrap the application in a web worker.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201608110000000006","sortNo":6,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201608110000000007","sortNo":7,"contentFormatId":"1","contentTxt":"There is also a ServiceMessageBrokerFactory at play here to facilitate web worker communication. Web worker communication is message based, so whenever we receive a message over the correct channel, the calculate method will be called. The calculate method is registered with the broker based on some meta data with some information about its input and output types. The PRIMITIVE symbol means the method requires primitives types like string, number and boolean as input and output.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201608110000000008","sortNo":8,"contentFormatId":"1","contentTxt":"The message broker requires the calculate method to return a promise.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201608110000000009","sortNo":9,"contentFormatId":"1","contentTxt":"Next I have created a loader (loader.ts) to load the component we just created.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201608110000000010","sortNo":10,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201608110000000011","sortNo":11,"contentFormatId":"1","contentTxt":"Finally we create the entry point for the worker (main.ts)","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201608110000000012","sortNo":12,"contentFormatId":"2","contentTxt":"","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201608110000000013","sortNo":13,"contentFormatId":"1","contentTxt":"In main.ts I kick of the loading of the web worker, but I also define a channel for communication between the host application and the web worker.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201608110000000014","sortNo":14,"contentFormatId":"1","contentTxt":"Once the worker application is bootstrapped I create a message broker to create a two way channel between the host and the web worker. Through this channel I can pass in the value 'n' and get the calculated factorial value in return.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201608110000000015","sortNo":15,"contentFormatId":"1","contentTxt":"The setup in the post bootstrap method matches the message broker definitions in the web worker component.","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201608110000000016","sortNo":16,"contentFormatId":"1","contentTxt":"source code:","contentBinary":"","contentPoster":"","contentUrl":null},{"id":"201608110000000017","sortNo":17,"contentFormatId":"1","contentTxt":"<a href=\"https://github.com/thelgevold/angular-2-samples/tree/master/components/web-workers\">https://github.com/thelgevold/angular-2-samples/tree/master/components/web-workers</a>","contentBinary":"","contentPoster":"","contentUrl":null}]